// Generated by CoffeeScript 1.3.3
(function() {
  var _;

  _ = require('underscore');

  this.StepArgsParser = (function() {
    var args_matcher;

    function StepArgsParser() {}

    args_matcher = /'(.*?)'/g;

    StepArgsParser.prototype.normalized = function(line) {
      return line.replace(args_matcher, '@x');
    };

    StepArgsParser.prototype.parse = function(line) {
      return this.cleanup(line.match(args_matcher));
    };

    StepArgsParser.prototype.cleanup = function(args) {
      return _.map(args, function(arg) {
        return arg.slice(1, -1);
      });
    };

    return StepArgsParser;

  })();

  this.FuncArgsParser = (function() {
    var args_matcher;

    function FuncArgsParser() {}

    args_matcher = /(@\S+)/g;

    FuncArgsParser.prototype.normalized = function(func) {
      return func.replace(args_matcher, '@x');
    };

    FuncArgsParser.prototype.parse = function(func) {
      return func.match(args_matcher);
    };

    FuncArgsParser.prototype.inline = function(step, func) {
      var arg, i, _i, _len, _ref;
      if (func.args_names == null) {
        return step;
      }
      _ref = func.args_names;
      for (i = _i = 0, _len = _ref.length; _i < _len; i = ++_i) {
        arg = _ref[i];
        step = step.replace(RegExp("" + arg, "g"), func.args_values[i]);
      }
      return step;
    };

    return FuncArgsParser;

  })();

}).call(this);
